"""add tables

Revision ID: 44894dd8afab
Revises: 
Create Date: 2022-03-12 14:14:57.227617

"""
import sqlalchemy as sa  # type: ignore

from alembic import op

# revision identifiers, used by Alembic.
revision = "44894dd8afab"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Asset",
        sa.Column(
            "id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="Unique asset ID.",
        ),
        sa.Column("symbol", sa.TEXT(), nullable=False, comment="Asset name."),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Point",
        sa.Column(
            "id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="Unique point ID.",
        ),
        sa.Column("asset_id", sa.INTEGER(), nullable=False, comment="Asset ID."),
        sa.Column("value", sa.FLOAT(), nullable=False, comment="Asset value."),
        sa.Column("ts", sa.TIMESTAMP(), nullable=False, comment="Point timestamp."),
        sa.ForeignKeyConstraint(["asset_id"], ["Asset.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_Point_ts"), "Point", ["ts"], unique=False)
    # ### end Alembic commands ###

    # Insert default assets
    values = [
        {"id": 1, "symbol": "EURUSD"},
        {"id": 2, "symbol": "USDJPY"},
        {"id": 3, "symbol": "GBPUSD"},
        {"id": 4, "symbol": "AUDUSD"},
        {"id": 5, "symbol": "USDCAD"},
    ]

    conn: sa.engine.Connection = op.get_bind()
    metadata = sa.MetaData(bind=conn)
    metadata.reflect()

    asset = metadata.tables["Asset"]

    conn.execute(asset.insert().values(values))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_Point_ts"), table_name="Point")
    op.drop_table("Point")
    op.drop_table("Asset")
    # ### end Alembic commands ###
